version: "3.9"

services:
  postgres:
    image: postgres:17
    container_name: smartchat_postgres
    environment:
      POSTGRES_DB: smart_chat_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 20022008nA!
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5

  redis:
    image: redis:8
    container_name: smartchat_redis
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:8.6.0
    container_name: smartchat_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "echo ruok | nc localhost 2181" ]
      interval: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:8.6.0
    container_name: smartchat_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 15s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartchat_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

volumes:
  pgdata: